{"version":3,"file":"styles/main.min.css","mappings":"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","sources":["webpack:///./src/styles/fonts.scss","webpack:///./node_modules/bootstrap/scss/_grid.scss","webpack:///./node_modules/bootstrap/scss/mixins/_grid.scss","webpack:///./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack:///./node_modules/bootstrap/scss/_containers.scss","webpack:///./node_modules/bootstrap/scss/mixins/_container.scss","webpack:///./src/styles/utils.scss","webpack:///./src/styles/mixins.scss","webpack:///./src/styles/general.scss","webpack:///./src/styles/buttons.scss","webpack:///./src/styles/variables.scss","webpack:///./src/styles/dropdown.scss","webpack:///./src/styles/header.scss","webpack:///./src/styles/footer.scss","webpack:///./src/styles/main-slider.scss","webpack:///./src/styles/slide-content-main-description.scss"],"sourcesContent":["@font-face {\r\n  font-family: \"Proxima Nova\";\r\n  src: url(\"../fonts/ProximaNova-Light.eot\");\r\n  src: local(\"Proxima Nova Light\"), local(\"ProximaNova-Light\"), url(\"../fonts/ProximaNova-Light.eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/ProximaNova-Light.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Light.woff\") format(\"woff\"), url(\"../fonts/ProximaNova-Light.ttf\") format(\"truetype\");\r\n  font-weight: 300;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"Proxima Nova\";\r\n  src: url(\"../fonts/ProximaNova-Bold.eot\");\r\n  src: local(\"Proxima Nova Bold\"), local(\"ProximaNova-Bold\"), url(\"../fonts/ProximaNova-Bold.eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/ProximaNova-Bold.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Bold.woff\") format(\"woff\"), url(\"../fonts/ProximaNova-Bold.ttf\") format(\"truetype\");\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: \"Proxima Nova\";\r\n  src: url(\"../fonts/ProximaNova-Regular.eot\");\r\n  src: local(\"Proxima Nova Regular\"), local(\"ProximaNova-Regular\"), url(\"../fonts/ProximaNova-Regular.eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/ProximaNova-Regular.woff2\") format(\"woff2\"), url(\"../fonts/ProximaNova-Regular.woff\") format(\"woff\"), url(\"../fonts/ProximaNova-Regular.ttf\") format(\"truetype\");\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n","// Row\n//\n// Rows contain your columns.\n\n:root {\n  @each $name, $value in $grid-breakpoints {\n    --#{$prefix}breakpoint-#{$name}: #{$value};\n  }\n}\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n\n    > * {\n      @include make-col-ready();\n    }\n  }\n}\n\n@if $enable-cssgrid {\n  .grid {\n    display: grid;\n    grid-template-rows: repeat(var(--#{$prefix}rows, 1), 1fr);\n    grid-template-columns: repeat(var(--#{$prefix}columns, #{$grid-columns}), 1fr);\n    gap: var(--#{$prefix}gap, #{$grid-gutter-width});\n\n    @include make-cssgrid();\n  }\n}\n\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  --#{$prefix}gutter-x: #{$gutter};\n  --#{$prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n}\n\n@mixin make-col-ready() {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// number of columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: percentage(divide(1, $count));\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$prefix}gutter-x: #{$value};\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$prefix}gutter-y: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is an invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Container widths\n//\n// Set the container width, and override it for fixed navbars in media queries.\n\n@if $enable-container-classes {\n  // Single container class with breakpoint max-widths\n  .container,\n  // 100% wide container at all breakpoints\n  .container-fluid {\n    @include make-container();\n  }\n\n  // Responsive containers that are 100% wide until a breakpoint\n  @each $breakpoint, $container-max-width in $container-max-widths {\n    .container-#{$breakpoint} {\n      @extend .container-fluid;\n    }\n\n    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\n      %responsive-container-#{$breakpoint} {\n        max-width: $container-max-width;\n      }\n\n      // Extend each breakpoint which is smaller or equal to the current breakpoint\n      $extend-breakpoint: true;\n\n      @each $name, $width in $grid-breakpoints {\n        @if ($extend-breakpoint) {\n          .container#{breakpoint-infix($name, $grid-breakpoints)} {\n            @extend %responsive-container-#{$breakpoint};\n          }\n\n          // Once the current breakpoint is reached, stop extending\n          @if ($breakpoint == $name) {\n            $extend-breakpoint: false;\n          }\n        }\n      }\n    }\n  }\n}\n","// Container mixins\n\n@mixin make-container($gutter: $container-padding-x) {\n  --#{$prefix}gutter-x: #{$gutter};\n  --#{$prefix}gutter-y: 0;\n  width: 100%;\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-right: auto;\n  margin-left: auto;\n}\n",".visible-xs,\r\n.visible-sm,\r\n.visible-lg,\r\n.visible-xl {\r\n  display: none;\r\n}\r\n\r\n@include media(laptop) {\r\n  .hidden-lg {\r\n    display: none;\r\n  }\r\n}\r\n\r\n@include media(tablet) {\r\n  .visible-sm {\r\n    display: block;\r\n  }\r\n\r\n  .hidden-sm {\r\n    display: none !important;\r\n  }\r\n}\r\n@include media(mobile) {\r\n  .visible-xs {\r\n    display: block;\r\n  }\r\n\r\n  .hidden-xs {\r\n    display: none !important;\r\n  }\r\n}\r\n","@mixin retina-background($url, $file-type, $ratio: 1.5, $suffix: \"@2x\") {\r\n  background-image: url($url + \".\" + $file-type);\r\n\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n      only screen and (min--moz-device-pixel-ratio: $ratio),\r\n      only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\r\n      only screen and (min-resolution: #{round($ratio*96)}dpi),\r\n      only screen and (min-resolution: #{$ratio}dppx) {\r\n    background-image: url($url + $suffix + \".\" + $file-type);\r\n  }\r\n}\r\n\r\n@mixin media($device) {\r\n  @if ($device == mobile) {\r\n    @media (max-width: #{$tablet - 1px}) {\r\n      @content;\r\n    }\r\n  } @else if ($device == tablet) {\r\n    @media (min-width: $tablet) and (max-width: #{$laptop - 1px}) {\r\n      @content;\r\n    }\r\n  } @else if ($device == laptop) {\r\n    @media (min-width: $laptop) and (max-width: #{$desktop - 1px}) {\r\n      @content;\r\n    }\r\n  } @else if ($device == desktop) {\r\n    @media (min-width: $desktop) {\r\n      @content;\r\n    }\r\n  } @else if ($device == to_desktop) {\r\n    @media (max-width: #{$desktop - 1px}) {\r\n      @content;\r\n    }\r\n  } @else if ($device == to_laptop) {\r\n    @media (max-width: #{$laptop - 1px}) {\r\n      @content;\r\n    }\r\n  } @else if ($device == from_tablet) {\r\n    @media (min-width: $tablet) {\r\n      @content;\r\n    }\r\n  } @else if ($device == from_laptop) {\r\n    @media (min-width: $laptop) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","*,\r\n::before,\r\n::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n:root {\r\n  --main-slider-opacity-trans-dur: #{$main-slider-opacity-trans-dur};\r\n  --main-slider-trans-dur: #{$main-slider-trans-dur};\r\n  --header-social-size: #{$header-social-size-xs};\r\n  --header-padding-y: #{$header-padding-y-xs};\r\n  --header-padding-x: 0;\r\n  --footer-social-size: #{$footer-social-size-xs};\r\n  --controls-size: 50px;\r\n  --controls-x-pos: 10px;\r\n  --controls-y-pos: 10px;\r\n\r\n  @include media(from_tablet) {\r\n    \r\n    \r\n  }\r\n\r\n  @include media(from_laptop) {\r\n    --header-social-size: #{$header-social-size};\r\n    --header-padding-y: #{$header-padding-y};\r\n    --header-padding-x: 50px;\r\n    --footer-social-size: #{$footer-social-size};\r\n    --controls-size: 125px;\r\n    --controls-x-pos: 45px;\r\n    --controls-y-pos: 30px;\r\n  }\r\n}\r\n\r\nbody {\r\n  font-family: \"Proxima Nova\", sans-serif;\r\n  font-weight: 300;\r\n  color: $black;\r\n}\r\n",".btn {\r\n  display: inline-block;\r\n  font-size: 24px;\r\n  line-height: $button-line-height;\r\n  text-decoration: none;\r\n  padding: $button-padding-y 35px;\r\n  border: $button-border-width solid transparent;\r\n  border-radius: $button-line-height + $button-padding-y + $button-border-width;\r\n  background: none;\r\n  transition-property: color, background-color, border-color;\r\n  transition-duration: $trans-dur;\r\n\r\n  &-simple {\r\n    border-color: $simple-button-color;\r\n    color: $simple-button-color;\r\n\r\n    &:hover {\r\n      background: $simple-button-color;\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  &-accent {\r\n    border-color: $primary;\r\n    background-color: $primary;\r\n    color: #fff;\r\n\r\n    &:hover {\r\n      border-color: #fff;\r\n      background-color: #fff;\r\n      color: $black;\r\n    }\r\n  }\r\n}\r\n","// Bootstrap variables\r\n$grid-columns: 15;\r\n$grid-gutter-width: 20px;\r\n$container-max-widths: (\r\n  sm: 540px,\r\n  md: 720px,\r\n  lg: 960px,\r\n  xl: 1140px,\r\n  xxl: 1200px\r\n);\r\n\r\n// Breakpoints\r\n$tablet: 768px;\r\n$laptop: 1024px;\r\n$desktop: 1360px;\r\n\r\n// Various dimentions\r\n$header-social-size: 68px;\r\n$footer-social-size: 96px;\r\n$header-social-size-xs: 45px;\r\n$footer-social-size-xs: 60px;\r\n$header-padding-y: 28px;\r\n$header-padding-y-xs: 16px;\r\n$button-border-width: 2px;\r\n$button-padding-y: 7px;\r\n$button-line-height: 32px;\r\n$control-size: 125px;\r\n\r\n// Colors\r\n$primary: #da2829;\r\n$black: #15181d;\r\n$on-black-content: #5c5e63;\r\n$simple-button-color: #fff;\r\n\r\n// Transitions\r\n$trans-dur: .5s;\r\n$main-slider-opacity-trans-dur: 1s;\r\n$main-slider-trans-dur: 4s;",".js-dropdown {\r\n  position: relative;\r\n\r\n  &.js-is-shown {\r\n    .dropdown__menu {\r\n      visibility: visible;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &__toggle {\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.dropdown__menu {\r\n  position: absolute;\r\n  top: 100%;\r\n  visibility: hidden;\r\n  opacity: 0;\r\n  transition-property: visibility, opacity;\r\n  transition-duration: $trans-dur;\r\n}\r\n","@use 'sass:math';\r\n\r\n.header {\r\n  font-size: 24px;\r\n  line-height: 36px;\r\n  font-weight: 400;\r\n  position: fixed;\r\n  z-index: 2;\r\n  width: 100%;\r\n  padding: var(--header-padding-y) var(--header-padding-x);\r\n  color: #fff;\r\n\r\n  &__content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  &__socials {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 35px;\r\n  }\r\n\r\n  &__socials-list {\r\n    list-style: none;\r\n    display: flex;\r\n    gap: 15px;\r\n  }\r\n\r\n  &__social {\r\n    width: var(--header-social-size);\r\n    height: var(--header-social-size);\r\n    border-radius: var(--header-social-size);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff;\r\n    transition-property: background-color, color;\r\n    transition-duration: $trans-dur;\r\n\r\n    &:hover {\r\n      background: #fff;\r\n      color: $black;\r\n    }\r\n\r\n    @include media(to_laptop) {\r\n      svg {\r\n        transform: scale(math.div($header-social-size-xs, $header-social-size));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.header-langs {\r\n  &__list {\r\n    list-style: none;\r\n  }\r\n\r\n  &__btn {\r\n    position: relative;\r\n    font-size: inherit;\r\n    line-height: inherit;\r\n    color: inherit;\r\n    padding: 0 45px;\r\n    border: none;\r\n    background: none;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      right: 18px;\r\n      top: 50%;\r\n      margin-top: -3px;\r\n      border-top: 6px solid #fff;\r\n      border-left: 6px solid transparent;\r\n      border-right: 6px solid transparent;\r\n    }\r\n  }\r\n\r\n  &__link {\r\n    display: block;\r\n    padding: 8px 45px;\r\n    border-radius: 52px;\r\n    margin-top: 8px;\r\n    text-decoration: none;\r\n    text-wrap: nowrap; // because of chinese\r\n    color: inherit;\r\n    transition-property: color, background-color;\r\n    transition-duration: $trans-dur;\r\n\r\n    &:hover {\r\n      background: #fff;\r\n      color: $black;\r\n    }\r\n  }\r\n}\r\n","@use 'sass:math';\r\n\r\n.footer {\r\n  font-size: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n  padding: 50px 0;\r\n  color: $on-black-content;\r\n  background: $black;\r\n\r\n  &__heading {\r\n    font-size: 24px;\r\n    font-weight: 300;\r\n  }\r\n\r\n  &__socials-list {\r\n    list-style: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 30px 60px;\r\n    margin: 50px 0;\r\n\r\n    @include media(to_laptop) {\r\n      gap: 15px 30px;\r\n    }\r\n  }\r\n\r\n  &__social {\r\n    width: var(--footer-social-size);\r\n    height: var(--footer-social-size);\r\n    border-radius: var(--footer-social-size);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff;\r\n    background: $on-black-content;\r\n    transition-property: color, background-color;\r\n    transition-duration: $trans-dur;\r\n\r\n    &:hover {\r\n      color: $on-black-content;\r\n      background: #fff;\r\n    }\r\n\r\n    @include media(to_laptop) {\r\n      svg {\r\n        transform: scale(math.div($footer-social-size-xs, $footer-social-size));\r\n      }\r\n    }\r\n  }\r\n\r\n  &__copyrights-link {\r\n    color: inherit;\r\n    text-decoration: underline;\r\n    text-decoration-color: transparent;\r\n    transition-property: color, text-decoration-color;\r\n    transition-duration: $trans-dur;\r\n\r\n    &:hover {\r\n      color: #fff;\r\n      text-decoration-color: currentColor;\r\n    }\r\n  }\r\n}",".main-slider {\r\n  &__list {\r\n    list-style: none;\r\n  }\r\n\r\n  &__control {\r\n    position: fixed;\r\n    z-index: 1;\r\n\r\n    &-btn {\r\n      width: var(--controls-size);\r\n      height: var(--controls-size);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-radius: 125px;\r\n      border: none;\r\n      cursor: pointer;\r\n      color: #fff;\r\n      background: none;\r\n      transition: background-color $trans-dur, color $trans-dur;\r\n\r\n      &:hover {\r\n        background: #fff;\r\n        color: $black;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__prev,\r\n  &__next {\r\n    top: 50%;\r\n    margin-top: calc(var(--controls-size) / -2);\r\n  }\r\n\r\n  &__prev {\r\n    left: var(--controls-x-pos);\r\n  }\r\n\r\n  &__next {\r\n    right: var(--controls-x-pos);\r\n  }\r\n\r\n  &__scroll-down {\r\n    bottom: var(--controls-y-pos);\r\n    left: 50%;\r\n    margin-left: calc(var(--controls-size) / -2);\r\n  }\r\n\r\n  &__slide {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: opacity 0s $main-slider-opacity-trans-dur;\r\n  }\r\n}\r\n\r\n.js-hidden-on-scroll {\r\n  opacity: 1;\r\n  transition-property: opacity, visibility;\r\n  transition-duration: $trans-dur;\r\n}\r\n\r\n.js-body--scrolled {\r\n  .js-hidden-on-scroll {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n  }\r\n\r\n  .js-slide--active {\r\n    .slide-presentation__fragment {\r\n      transition-duration: $trans-dur * 2;\r\n      transition-delay: 0s;\r\n    }\r\n  }\r\n}\r\n\r\n.slide {\r\n  &__heading {\r\n    font-size: 34px;\r\n    font-weight: 700;\r\n    letter-spacing: 0.4em;\r\n    text-transform: uppercase;\r\n    padding-bottom: 90px;\r\n    margin-bottom: -70px;\r\n\r\n    @include media(from_tablet) {\r\n      font-size: 60px;\r\n    }\r\n\r\n    @include media(desktop) {\r\n      font-size: 94px;\r\n    }\r\n\r\n    @media (min-width: 1600px) {\r\n      font-size: 120px;\r\n    }\r\n  }\r\n\r\n  &__description {\r\n    font-size: 36px;\r\n    font-weight: 400;\r\n    letter-spacing: 0.1em;\r\n    margin-bottom: 55px;\r\n  }\r\n}\r\n\r\n.js-slide--active {\r\n  position: relative;\r\n  z-index: 1;\r\n  opacity: 1;\r\n  transition-duration: $main-slider-opacity-trans-dur;\r\n  transition-delay: 0s;\r\n\r\n  .slide-presentation__fragment {\r\n    transition-duration: $main-slider-trans-dur;\r\n    transition-delay: $main-slider-opacity-trans-dur;\r\n  }\r\n\r\n  .slide-content {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.slide-miss {\r\n  .slide-presentation__wrapper,\r\n  .slide-presentation__fragment {\r\n    @include retina-background(\"./images/main-slider/miss\", \"jpg\");\r\n  }\r\n}\r\n\r\n.slide-blogger {\r\n  .slide-presentation__wrapper,\r\n  .slide-presentation__fragment {\r\n    @include retina-background(\"./images/main-slider/blogger\", \"jpg\");\r\n  }\r\n}\r\n\r\n.slide-model {\r\n  .slide-presentation__wrapper,\r\n  .slide-presentation__fragment {\r\n    @include retina-background(\"./images/main-slider/model\", \"jpg\");\r\n  }\r\n}\r\n\r\n.slide-presentation {\r\n  min-height: 100vh;\r\n\r\n  &__wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: calc(var(--header-social-size) + 2 * var(--header-padding-y)) calc(var(--controls-size) + var(--controls-x-pos) * 2) calc(var(--controls-size) + var(--controls-y-pos) * 2);\r\n    // padding: val(--controls-size) ;\r\n    color: #fff;\r\n    text-align: center;\r\n    perspective: 400px;\r\n\r\n    .main-slider__slide & {\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      background-size: cover;\r\n      // background-attachment: fixed;\r\n    }\r\n  }\r\n\r\n  &__fragment {\r\n    position: absolute;\r\n    background-repeat: no-repeat;\r\n    transition-property: transform, box-shadow;\r\n    transition-timing-function: ease-in-out;\r\n    transition-duration: 0s;\r\n    transition-delay: $main-slider-opacity-trans-dur;\r\n  }\r\n\r\n  &__content {\r\n    position: relative;\r\n\r\n    .btn {\r\n      min-width: 250px;\r\n    }\r\n  }\r\n\r\n  &__links-list {\r\n    list-style: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 20px 40px;\r\n  }\r\n}\r\n\r\n.slide-content {\r\n  display: none;\r\n  background: #fff;\r\n  position: relative;\r\n}\r\n",".slide-content-main-description {\r\n  padding-bottom: 120px;\r\n  margin-top: 195px;\r\n  background: $black;\r\n\r\n  &__content {\r\n    position: relative;\r\n    top: -195px;\r\n    font-size: 36px;\r\n    line-height: 50px;\r\n    text-align: center;\r\n    padding: 80px 90px;\r\n    background: #fff;\r\n\r\n    &:after {\r\n      content: '';\r\n      width: 30px;\r\n      height: 29px;\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 50%;\r\n      margin-left: -15px;\r\n      background: url('../images/svg/star.svg') no-repeat;\r\n    }\r\n  }\r\n\r\n  &__triangle {\r\n    width: 70.711%; // sqrt(2) / 2 * 100%\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -35.356%;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 50%;\r\n      width: 100%;\r\n      padding-top: 100%;\r\n      transform: translate(-50%, -50%) scaleY(0.1) rotate(45deg);\r\n      background: #fff;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}